{"version":3,"sources":["components/NavbarLogged.js","components/PopUpErr.js","api.js","components/PokeCardNoAction.js","pages/Perfil.js","components/PokeType.js","components/PokeCard.js","components/Pagination.js","components/MyDeck.js","components/PopUpSuccess.js","pages/Baralhos.js","components/Error.js","pages/SignUp.js","AuthContext.js","pages/SignIn.js","pages/LogOut.js","App.js","index.js"],"names":["pages","settings","Navbar","React","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleCloseNavMenu","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Link","href","sx","mr","display","xs","md","cursor","color","underline","Typography","variant","noWrap","component","flexGrow","IconButton","size","onClick","event","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","page","MenuItem","textAlign","Button","my","Tooltip","title","p","Avatar","alt","src","mt","setting","AlertDialog","props","handleClose","closeDialog","Dialog","error","DialogTitle","DialogContent","DialogContentText","DialogActions","axios","create","baseURL","NoActionAreaCard","Card","margin","width","height","flexDirection","alignItems","justifyContent","CardMedia","image","pokemonSprite","pokemonName","CardContent","gutterBottom","Chip","label","pokemonType","Perfil","useState","errorMessage","setErrorMessage","deck","setDeck","navigate","useNavigate","useEffect","user","localStorage","getItem","replace","JSON","parse","user_id","api","get","then","response","obj","data","user_deck","console","log","array","Object","values","catch","err","Box","marginTop","marginBottom","Paper","flexWrap","item","sprite","name","type","ListItem","styled","theme","spacing","PokeType","handleClick","ActionAreaCard","a","cardObject","addNewCard","raised","CardActionArea","PaginationRounded","Stack","Pagination","count","Math","floor","total","shape","hidePrevButton","hideNextButton","onChange","setPagination","MyDeck","removeNewCard","keys","key","index","onDelete","handleDelete","AlertSuccess","message","Baralhos","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","buttonActivity","setButtonbuttonActivity","pokeInfo","setPokeInfo","setPage","sucessMessage","setSuccessMessage","toggleButton","target","prev","identifier","innerText","textContent","isInRange","val","this","lower","upper","range","fetchPokemon","pokeType","arrayOfPokemon","url","fetch","res","json","pokemon","resultFromFilter","filter","i","length","push","join","spriteURL","single","newCard","newDeck","post","status","arrayOfTypes","entries","result","listStyle","m","slice","Error","Alert","severity","SignUp","handleError","bgcolor","noValidate","onSubmit","preventDefault","FormData","username","email","password","Grid","container","sm","TextField","backgroundColor","borderRadius","autoComplete","required","fullWidth","autoFocus","mb","Context","createContext","AuthProvider","children","auth","setAuth","loading","setLoading","token","defaults","headers","Authorization","Provider","value","handleAuth","logOut","SignIn","setItem","stringify","LogOut","useContext","clear","createTheme","palette","primary","main","contrastText","secondary","background","default","paper","text","hint","disabled","divider","info","responsiveFontSizes","App","ThemeProvider","CssBaseline","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bcfba09.chunk.js","sourcesContent":["import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Link from \"@mui/material/Link\";\n\nconst pages = [\"Home\"];\nconst settings = [\"Profile\", \"Log out\"];\n\nconst Navbar = () => {\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const handleOpenNavMenu = (event) => {\n        setAnchorElNav(event.currentTarget);\n    };\n    const handleOpenUserMenu = (event) => {\n        setAnchorElUser(event.currentTarget);\n    };\n\n    const handleCloseNavMenu = () => {\n        setAnchorElNav(null);\n    };\n\n    const handleCloseUserMenu = () => {\n        setAnchorElUser(null);\n    };\n\n    return (\n        <AppBar position=\"sticky\">\n            <Container maxWidth=\"xl\">\n                <Toolbar disableGutters>\n                    <Link\n                        href=\"/\"\n                        sx={{\n                            mr: 2,\n                            display: { xs: \"none\", md: \"flex\" },\n                            cursor: \"pointer\",\n                        }}\n                        color=\"inherit\"\n                        underline=\"none\"\n                    >\n                        <Typography variant=\"h6\" noWrap component=\"div\">\n                            POKEDEX\n                        </Typography>\n                    </Link>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"flex\", md: \"none\" },\n                        }}\n                    >\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleOpenNavMenu}\n                            color=\"inherit\"\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"menu-appbar\"\n                            anchorEl={anchorElNav}\n                            anchorOrigin={{\n                                vertical: \"bottom\",\n                                horizontal: \"left\",\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: \"top\",\n                                horizontal: \"left\",\n                            }}\n                            open={Boolean(anchorElNav)}\n                            onClose={handleCloseNavMenu}\n                            sx={{\n                                display: { xs: \"block\", md: \"none\" },\n                            }}\n                        >\n                            {pages.map((page) => (\n                                <MenuItem\n                                    key={page}\n                                    onClick={handleCloseNavMenu}\n                                >\n                                    <Link\n                                        sx={{ cursor: \"pointer\" }}\n                                        color=\"inherit\"\n                                        underline=\"none\"\n                                        href={page === \"Home\" && \"/\"}\n                                    >\n                                        <Typography textAlign=\"center\">\n                                            {page}\n                                        </Typography>\n                                    </Link>\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                    </Box>\n                    <Link\n                        href=\"/\"\n                        color=\"inherit\"\n                        underline=\"none\"\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"flex\", md: \"none\" },\n                        }}\n                    >\n                        <Typography variant=\"h6\" noWrap component=\"div\">\n                            POKEDEX\n                        </Typography>\n                    </Link>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            display: { xs: \"none\", md: \"flex\" },\n                        }}\n                    >\n                        {pages.map((page) => (\n                            <Link\n                                sx={{ cursor: \"pointer\" }}\n                                color=\"inherit\"\n                                underline=\"none\"\n                                href={page === \"Create Deck\" ? \"/decks\" : \"/\"}\n                            >\n                                <Button\n                                    key={page}\n                                    onClick={handleCloseNavMenu}\n                                    sx={{\n                                        my: 2,\n                                        color: \"white\",\n                                        display: \"block\",\n                                    }}\n                                    variant=\"outlined\"\n                                >\n                                    {page}\n                                </Button>\n                            </Link>\n                        ))}\n                    </Box>\n\n                    <Box sx={{ flexGrow: 0 }}>\n                        <Tooltip title=\"Open settings\">\n                            <IconButton\n                                onClick={handleOpenUserMenu}\n                                sx={{ p: 0 }}\n                            >\n                                <Avatar\n                                    alt=\"Remy Sharp\"\n                                    src=\"/static/images/avatar/2.jpg\"\n                                />\n                            </IconButton>\n                        </Tooltip>\n                        <Menu\n                            sx={{ mt: \"45px\" }}\n                            id=\"menu-appbar\"\n                            anchorEl={anchorElUser}\n                            anchorOrigin={{\n                                vertical: \"top\",\n                                horizontal: \"right\",\n                            }}\n                            keepMounted\n                            transformOrigin={{\n                                vertical: \"top\",\n                                horizontal: \"right\",\n                            }}\n                            open={Boolean(anchorElUser)}\n                            onClose={handleCloseUserMenu}\n                        >\n                            {settings.map((setting) => (\n                                <Link\n                                    sx={{ cursor: \"pointer\" }}\n                                    color=\"inherit\"\n                                    underline=\"none\"\n                                    href={\n                                        setting === \"Profile\"\n                                            ? \"/profile\"\n                                            : \"/logout\"\n                                    }\n                                >\n                                    <MenuItem\n                                        key={setting}\n                                        onClick={handleCloseNavMenu}\n                                    >\n                                        <Typography textAlign=\"center\">\n                                            {setting}\n                                        </Typography>\n                                    </MenuItem>\n                                </Link>\n                            ))}\n                        </Menu>\n                    </Box>\n                </Toolbar>\n            </Container>\n        </AppBar>\n    );\n};\nexport default Navbar;\n","import Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\n\nexport default function AlertDialog(props) {\n  const handleClose = () => {\n    props.closeDialog();\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={props.error[0]}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"An error occurred\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.error[1]}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://pokedex-backend-app.herokuapp.com/api\",\n});\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { Container, Chip } from \"@mui/material/\";\n\nexport default function NoActionAreaCard(props) {\n    return (\n        <Card\n            variant=\"outlined\"\n            sx={{\n                margin: \"15px\",\n                width: \"200px\",\n                height: \"250px\",\n            }}\n        >\n            <Container\n                sx={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                }}\n            >\n                <Container\n                    sx={{\n                        height: \"60%\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <CardMedia\n                        component=\"img\"\n                        image={props.pokemonSprite}\n                        alt={props.pokemonName}\n                        sx={{\n                            height: \"50%\",\n                            width: \"auto\",\n                        }}\n                    />\n                </Container>\n\n                <Container\n                    disableGutters\n                    sx={{\n                        height: \"30%\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                    }}\n                >\n                    <CardContent\n                        sx={{\n                            height: \"100%\",\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                            {props.pokemonName}\n                        </Typography>\n                        <Chip variant=\"outlined\" label={props.pokemonType} />\n                    </CardContent>\n                </Container>\n            </Container>\n        </Card>\n    );\n}\n","import { Box } from \"@mui/system/\";\nimport Navbar from \"../components/NavbarLogged\";\nimport AlertDialog from \"../components/PopUpErr\";\n\nimport {\n    Container,\n    Paper,\n    Typography,\n    TextField,\n    FormControl,\n    Button,\n    Divider,\n} from \"@mui/material/\";\n\nimport { useEffect, useState } from \"react\";\nimport api from \"../api\";\nimport { useNavigate } from \"react-router-dom\";\nimport NoActionAreaCard from \"../components/PokeCardNoAction\";\n\nexport default function Perfil() {\n    const [errorMessage, setErrorMessage] = useState([false, \"just an error\"]);\n\n    let [deck, setDeck] = useState([]);\n    let navigate = useNavigate();\n    useEffect(() => {\n        const user = localStorage.getItem(\"user\");\n\n        if (!user) {\n            navigate(\"../signin\", { replace: true });\n        }\n\n        const json = JSON.parse(user);\n        const id = json[0].user_id;\n        api.get(`/decks/${id}`)\n            .then((response) => {\n                const obj = JSON.parse(response.data[0].user_deck);\n                if (obj === null) {\n                    return console.log(\"network error\");\n                }\n                var array = Object.values(obj);\n                console.log(array);\n                setDeck(array);\n            })\n            .catch((err) => setErrorMessage([true, err]));\n    }, []);\n\n    function closeDialog() {\n        setErrorMessage([false, \"just a random error\"]);\n    }\n\n    return (\n        <Box>\n            <Navbar />\n            <Container component=\"main\" sx={{ marginTop: \"50px\" }}>\n                <Typography\n                    variant=\"h4\"\n                    component=\"h2\"\n                    sx={{ marginBottom: \"10px\" }}\n                >\n                    My Deck\n                </Typography>\n                <AlertDialog error={errorMessage} closeDialog={closeDialog} />\n\n                <Paper\n                    sx={{\n                        marginBottom: \"30px\",\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                        justifyContent: \"space-around\",\n                    }}\n                >\n                    <Container\n                        disableGutters\n                        sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        {deck.map((item) => (\n                            <NoActionAreaCard\n                                pokemonSprite={item.sprite}\n                                pokemonName={item.name}\n                                pokemonType={item.type}\n                                key={item.name}\n                            />\n                        ))}\n                    </Container>\n                </Paper>\n            </Container>\n        </Box>\n    );\n}\n\n/*\n\n\t\t\t\t*/\n","import { styled } from \"@mui/material/styles\";\nimport Chip from \"@mui/material/Chip\";\n\nconst ListItem = styled(\"li\")(({ theme }) => ({\n\tmargin: theme.spacing(0.5),\n}));\n\nexport default function PokeType(props) {\n\treturn (\n\t\t<ListItem sx={{ width: \"100px\", margin: \"10px\" }}>\n\t\t\t<Chip\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tlabel={props.name}\n\t\t\t\tcolor={props.color ? \"secondary\" : \"default\"}\n\t\t\t\tsx={{ width: \"100%\", cursor: \"pointer\" }}\n\t\t\t\tonClick={props.handleClick}\n\t\t\t/>\n\t\t</ListItem>\n\t);\n}\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport { Container, Chip } from \"@mui/material/\";\n\nexport default function ActionAreaCard(props) {\n    async function addPokemon() {\n        const name = props.pokemonName;\n        const sprite = props.pokemonSprite;\n        const type = props.pokemonType;\n\n        const cardObject = { name: name, sprite: sprite, type: type };\n\n        props.addNewCard(cardObject);\n    }\n\n    return (\n        <Card\n            raised\n            sx={{\n                width: \"250px\",\n                height: \"300px\",\n                marginTop: \"30px\",\n            }}\n            onClick={addPokemon}\n        >\n            <CardActionArea\n                sx={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                }}\n            >\n                <Container\n                    sx={{\n                        height: \"70%\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <CardMedia\n                        component=\"img\"\n                        image={props.pokemonSprite}\n                        alt={props.pokemonName}\n                        sx={{\n                            height: \"70%\",\n                            width: \"auto\",\n                        }}\n                    />\n                </Container>\n\n                <Container\n                    disableGutters\n                    sx={{\n                        height: \"30%\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                    }}\n                >\n                    <CardContent\n                        sx={{\n                            height: \"100%\",\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-around\",\n                        }}\n                    >\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                            {props.pokemonName}\n                        </Typography>\n                        <Chip variant=\"outlined\" label={props.pokemonType} />\n                    </CardContent>\n                </Container>\n            </CardActionArea>\n        </Card>\n    );\n}\n","import * as React from \"react\";\nimport Pagination from \"@mui/material/Pagination\";\nimport Stack from \"@mui/material/Stack\";\n\nexport default function PaginationRounded(props) {\n\treturn (\n\t\t<Stack spacing={2}>\n\t\t\t<Pagination\n\t\t\t\tcount={Math.floor(props.total/20) + 1}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tcolor=\"secondary\"\n\t\t\t\tshape=\"rounded\"\n                hidePrevButton\n                hideNextButton\n\t\t\t\tonChange={props.setPagination}\n\t\t\t/>\n\t\t</Stack>\n\t);\n}\n","import Paper from \"@mui/material/Paper\";\nimport Chip from \"@mui/material/Chip\";\nimport Container from \"@mui/material/Container\";\n\nexport default function MyDeck(props) {\n\t//removes pokemon from deck (setDeck)\n\tasync function handleDelete(data) {\n\t\tprops.removeNewCard(data);\n\t}\n\n\treturn (\n\t\t<Container disableGutters sx={{ height: \"auto\" }}>\n\t\t\t<Paper sx={{ display: \"flex\", height: \"100%\", width: \"100%\" }}>\n\t\t\t\t<Container\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tmargin: \"15px\",\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\tflexWrap: \"wrap\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{props.deck &&\n\t\t\t\t\t\tObject.keys(props.deck).map((key, index) => (\n\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tsx={{ margin: \"5px\" }}\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\tlabel={key}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tonDelete={() => handleDelete(key)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t</Container>\n\t\t\t</Paper>\n\t\t</Container>\n\t);\n}\n","import Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\n\nexport default function AlertSuccess(props) {\n    const handleClose = () => {\n        props.closeDialog();\n    };\n\n    return (\n        <div>\n            <Dialog\n                open={props.message[0]}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Sucess\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {props.message[1]}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>Ok</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import Box from \"@mui/system/Box\";\nimport Navbar from \"../components/NavbarLogged\";\nimport { Container, Paper, Typography } from \"@mui/material\";\nimport PokeType from \"../components/PokeType\";\nimport { useState, useEffect } from \"react\";\nimport PokeCard from \"../components/PokeCard\";\nimport PaginationRounded from \"../components/Pagination\";\nimport MyDeck from \"../components/MyDeck\";\nimport AlertDialog from \"../components/PopUpErr\";\nimport { Button } from \"@mui/material\";\nimport api from \"../api\";\nimport AlertSuccess from \"../components/PopUpSuccess\";\n\nexport default function Baralhos() {\n    //when the button is pressed, this states makes sure it is selected\n    const [buttonActivity, setButtonbuttonActivity] = useState({\n        bug: false,\n        dark: false,\n        dragon: false,\n        electric: false,\n        fairy: false,\n        fighting: false,\n        fire: false,\n        flying: false,\n        ghost: false,\n        grass: false,\n        ground: false,\n        ice: false,\n        normal: false,\n        poison: false,\n        psychic: false,\n        rock: false,\n        steel: false,\n        water: false,\n    });\n\n    //holds array of pokemon that should be printed\n    const [pokeInfo, setPokeInfo] = useState([]);\n    const [page, setPage] = useState(1);\n\n    //holds error messages\n    const [errorMessage, setErrorMessage] = useState([false, \"just an error\"]);\n    const [sucessMessage, setSuccessMessage] = useState([\n        false,\n        \"just another success\",\n    ]);\n\n    //toggles the buttonActivity\n    async function toggleButton({ target }) {\n        setButtonbuttonActivity((prev) => {\n            const obj = { ...prev };\n            const identifier = target.innerText;\n            obj[identifier] = !obj[identifier];\n            return obj;\n        });\n    }\n\n    //save an object containing my deck\n    const [deck, setDeck] = useState({});\n\n    //function to set the pagination based on target\n    async function setPagination({ target }) {\n        setPage(target.textContent);\n    }\n\n    function isInRange(val) {\n        return val >= this.lower && val <= this.upper;\n    }\n\n    let range = {\n        lower: 0,\n        upper: 9,\n    };\n\n    //this function fetches and returns an array of pokemon with [name, type, spriteURL]\n    async function fetchPokemon(pokeType) {\n        const arrayOfPokemon = [];\n        const url = `https://pokeapi.co/api/v2/type/${pokeType}/`;\n        await fetch(url)\n            .then((res) => res.json())\n            .then((json) => {\n                const pokemon = json.pokemon;\n                for (let index in pokemon) {\n                    let id = [];\n                    const resultFromFilter = [\n                        ...pokemon[index].pokemon.url,\n                    ].filter(isInRange, range);\n\n                    for (let i = 1; i < resultFromFilter.length; i++) {\n                        id.push(resultFromFilter[i]);\n                    }\n\n                    id = id.join(\"\");\n                    const spriteURL = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/home/${id}.png`;\n\n                    const single = [\n                        pokemon[index].pokemon.name,\n                        pokeType,\n                        spriteURL,\n                        id,\n                    ];\n                    arrayOfPokemon.push(single);\n                }\n            })\n            .catch((err) => console.log(err));\n        return arrayOfPokemon;\n    }\n\n    //add a new card\n    async function addNewCard(newCard) {\n        setDeck((prev) => {\n            if (Object.keys(prev).length > 9) {\n                setErrorMessage([\n                    true,\n                    \"You cannot have more than 10 cards in your deck.\",\n                ]);\n                const newDeck = { ...prev };\n                return newDeck;\n            }\n            const newDeck = { ...prev };\n            newDeck[newCard.name] = newCard;\n            return newDeck;\n        });\n    }\n\n    async function updateDeck() {\n        const user = localStorage.getItem(\"user\");\n        const json = JSON.parse(user);\n        const id = json[0].user_id;\n\n        api.post(`/decks/${id}`, {\n            deck: deck,\n        })\n            .then((json) => {\n                if (json.status === 200) {\n                    setSuccessMessage([true, \"Your deck is updated!\"]);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    //handleDialog Close\n    function closeDialog() {\n        setErrorMessage([false, \"just a random error\"]);\n        setSuccessMessage([false, \"just a random success\"]);\n        setDeck({});\n    }\n\n    //remove a card\n    async function removeNewCard(key) {\n        setDeck((prev) => {\n            const newDeck = { ...prev };\n            delete newDeck[key];\n            return newDeck;\n        });\n    }\n\n    //updates pokemon object on Button change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(async () => {\n        const arrayOfTypes = [];\n        for (let [pokeType, state] of Object.entries(buttonActivity)) {\n            if (state === true) {\n                const result = await fetchPokemon(pokeType);\n                arrayOfTypes.push(...result);\n            }\n        }\n        setPokeInfo(arrayOfTypes);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [buttonActivity]);\n\n    return (\n        <Box>\n            <Navbar />\n\n            <Container>\n                <Typography\n                    variant=\"h4\"\n                    component=\"h1\"\n                    color=\"inherit\"\n                    sx={{ marginBottom: \"10px\", marginTop: \"30px\" }}\n                >\n                    Choose a Type\n                </Typography>\n                <Paper\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"center\",\n                        flexWrap: \"wrap\",\n                        listStyle: \"none\",\n                        p: 0.5,\n                        m: 0,\n                    }}\n                    component=\"ul\"\n                >\n                    {Object.keys(buttonActivity).map((label, index) => (\n                        <PokeType\n                            name={label}\n                            color={buttonActivity[label]}\n                            handleClick={toggleButton}\n                            key={index}\n                        />\n                    ))}\n                </Paper>\n            </Container>\n\n            <AlertDialog error={errorMessage} closeDialog={closeDialog} />\n            <AlertSuccess message={sucessMessage} closeDialog={closeDialog} />\n            <Container\n                sx={{\n                    marginTop: \"30px\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\",\n                    justifyContent: \"flex-start\",\n                }}\n            >\n                <Box\n                    sx={{\n                        display: \"flex\",\n                        width: \"135px\",\n                        marginBottom: \"10px\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <Typography variant=\"h5\" component=\"h2\" color=\"inherit\">\n                        Deck\n                    </Typography>\n                    <Button\n                        size=\"medium\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={updateDeck}\n                    >\n                        SAVE\n                    </Button>\n                </Box>\n\n                <Container disableGutters>\n                    <MyDeck deck={deck} removeNewCard={removeNewCard} />\n                </Container>\n            </Container>\n\n            <Container sx={{ marginTop: \"50px\" }}>\n                <Container\n                    disableGutters\n                    sx={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    {pokeInfo.length > 0 && (\n                        <Container\n                            sx={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                alignItems: \"center\",\n                                justifyContent: \"flex-end\",\n                            }}\n                        >\n                            <Typography\n                                variant=\"h4\"\n                                component=\"h2\"\n                                color=\"inherit\"\n                            >\n                                Choose Your Pokemon\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                component=\"p\"\n                                color=\"inherit\"\n                            >\n                                Click on the pokemon you want to add to your\n                                deck.\n                            </Typography>\n                        </Container>\n                    )}\n                </Container>\n\n                <Container\n                    disableGutters\n                    sx={{\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                        justifyContent: \"space-around\",\n                    }}\n                >\n                    {pokeInfo.slice(page * 20 - 20, page * 20).map((item) => (\n                        <PokeCard\n                            pokemonSprite={item[2]}\n                            pokemonName={item[0]}\n                            pokemonType={item[1]}\n                            key={item[0]}\n                            addNewCard={addNewCard}\n                        />\n                    ))}\n                </Container>\n            </Container>\n\n            <Container\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    margin: \"50px\",\n                }}\n            >\n                {pokeInfo.length > 1 && (\n                    <PaginationRounded\n                        setPagination={setPagination}\n                        total={pokeInfo.length}\n                    />\n                )}\n            </Container>\n        </Box>\n    );\n}\n","import * as React from \"react\";\nimport Alert from \"@mui/material/Alert\";\nimport { Container } from \"@mui/material\";\nexport default function Error(props) {\n    return (\n        <Container disableGutters sx={{marginBottom: '20px'}}>\n            {props.message[0] && (\n                <Alert variant=\"filled\" severity=\"error\">{props.message[1]}</Alert>\n            )}\n        </Container>\n    );\n}\n","import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport NavbarLogged from \"../components/NavbarLogged\";\nimport api from \"../api\";\nimport { useState } from \"react\";\nimport Error from \"../components/Error\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function SignUp() {\n    const [errorMessage, setErrorMessage] = useState([false, \"No Error\"]);\n    let navigate = useNavigate();\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        // eslint-disable-next-line no-console\n\n        api.post(\"/users\", {\n            username: data.get(\"username\"),\n            email: data.get(\"email\"),\n            password: data.get(\"password\"),\n        })\n            .then((response) => {\n                if (response) {\n                    navigate(\"../signin\", { replace: true });\n                }\n            })\n            .catch((err) => {\n                handleError([true, \"Something went wrong. Try again later.\"]);\n            });\n    };\n\n    const handleError = (array) => {\n        setErrorMessage([...array]);\n    };\n\n    return (\n        <Box disableGutters>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" color=\"inherit\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <Box\n                        component=\"form\"\n                        noValidate\n                        onSubmit={handleSubmit}\n                        sx={{ mt: 3 }}\n                    >\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={12}>\n                                <Error message={errorMessage} />\n                                <TextField\n                                    sx={{\n                                        backgroundColor: \"#202020\",\n                                        borderRadius: \"3px\",\n                                    }}\n                                    autoComplete=\"given-name\"\n                                    color=\"secondary\"\n                                    name=\"username\"\n                                    required\n                                    fullWidth\n                                    id=\"username\"\n                                    label=\"Username\"\n                                    autoFocus\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    sx={{\n                                        backgroundColor: \"#202020\",\n                                        borderRadius: \"3px\",\n                                    }}\n                                    required\n                                    fullWidth\n                                    color=\"secondary\"\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    sx={{\n                                        backgroundColor: \"#202020\",\n                                        borderRadius: \"3px\",\n                                    }}\n                                    required\n                                    fullWidth\n                                    color=\"secondary\"\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"new-password\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container justifyContent=\"flex-end\">\n                            <Grid item color=\"info\">\n                                <Link\n                                    href=\"/signin\"\n                                    color=\"inherit\"\n                                    variant=\"body2\"\n                                >\n                                    Already have an account? Sign in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n            </Container>\n        </Box>\n    );\n}\n","import { createContext, useState, useEffect } from \"react\";\nimport api from \"./api\";\nimport { Container, Typography } from \"@mui/material\";\n\nconst Context = createContext();\n\nfunction AuthProvider({ children }) {\n    const [auth, setAuth] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const token = localStorage.getItem(\"token\");\n\n        if (token) {\n            api.defaults.headers.Authorization = `Bearer ${JSON.parse(token)}`;\n            setAuth(true);\n        }\n\n        setLoading(false);\n    }, []);\n\n    const handleAuth = () => {\n        setAuth(true);\n        setLoading(false);\n    };\n\n    const logOut = () => {\n        setAuth(false);\n    };\n\n    //!CODE RETURNED WHEN SCREEN IS LOADING\n    if (loading) {\n        return (\n            <Container\n                sx={{\n                    height: \"500px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                }}\n            >\n                <Typography variant=\"h1\">Loading...</Typography>\n            </Container>\n        );\n    }\n\n    return (\n        <Context.Provider value={{ auth, handleAuth, logOut }}>\n            {children}\n        </Context.Provider>\n    );\n}\n\nexport { Context, AuthProvider };\n","import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport NavbarLogged from \"../components/NavbarLogged\";\nimport api from \"../api\";\nimport { Context } from \"../AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function SignIn(props) {\n    let navigate = useNavigate();\n    const { auth, handleAuth } = React.useContext(Context);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n\n        // eslint-disable-next-line no-console\n        api.post(\"/users/login\", {\n            email: data.get(\"email\"),\n            password: data.get(\"password\"),\n        })\n            .then((response) => {\n                console.log(response);\n                localStorage.setItem(\n                    \"user\",\n                    JSON.stringify(response.data.user)\n                );\n                localStorage.setItem(\n                    \"token\",\n                    JSON.stringify(response.data.token)\n                );\n                api.defaults.headers.Authorization = `Bearer ${response.data.token}`;\n                handleAuth();\n                navigate(\"../\", { replace: true });\n            })\n            .catch((err) => console.log(err));\n    };\n\n    //TODO: I NEED TO CHANGE THIS LOGGEDIN NAVBAR, SINCE THE USER IS CREATING THE ACCOUNT\n\n    return (\n        <Box disableGutters>\n            \n            <Container component=\"main\" maxWidth=\"xs\">\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" color=\"inherit\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <Box\n                        component=\"form\"\n                        noValidate\n                        onSubmit={handleSubmit}\n                        sx={{ mt: 3 }}\n                    >\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    sx={{\n                                        backgroundColor: \"#202020\",\n                                        borderRadius: \"3px\",\n                                    }}\n                                    required\n                                    fullWidth\n                                    color=\"secondary\"\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    sx={{\n                                        backgroundColor: \"#202020\",\n                                        borderRadius: \"3px\",\n                                    }}\n                                    required\n                                    fullWidth\n                                    color=\"secondary\"\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"new-password\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container justifyContent=\"flex-end\">\n                            <Grid item color=\"info\">\n                                <Link\n                                    href=\"/signup\"\n                                    color=\"inherit\"\n                                    variant=\"body2\"\n                                >\n                                    Don't have an account yet? Sign up now\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n            </Container>\n        </Box>\n    );\n}\n","import { useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Context } from \"../AuthContext\";\n\nexport default function LogOut() {\n    const { auth, handleAuth, logOut } = useContext(Context);\n    let navigate = useNavigate();\n    useEffect(() => {\n        localStorage.clear();\n        logOut();\n        navigate(\"../\", { replace: true });\n    }, []);\n    return <></>;\n}\n","import {\n    createTheme,\n    responsiveFontSizes,\n    ThemeProvider,\n} from \"@mui/material/styles\";\nimport { CssBaseline } from \"@mui/material\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Perfil from \"./pages/Perfil\";\nimport Baralhos from \"./pages/Baralhos\";\nimport SignUp from \"./pages/SignUp\";\nimport SignIn from \"./pages/SignIn\";\nimport { useContext } from \"react\";\nimport { Context } from \"./AuthContext\";\nimport LogOut from \"./pages/LogOut\";\n\nlet theme = createTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            main: \"#cc0000\",\n            dark: \"#111111\",\n            contrastText: \"#eeeeee\",\n        },\n        secondary: {\n            main: \"#ffde00\",\n            contrastText: \"#111111\",\n        },\n        background: {\n            default: \"#0e0e0e\",\n            paper: \"#181818\",\n        },\n        text: {\n            primary: \"#ffffff\",\n            secondary: \"#ffffff\",\n            hint: \"#ffffff\",\n            disabled: \"rgba(255,255,255,0.5)\",\n        },\n        error: {\n            main: \"#f92828\",\n            contrastText: \"#eeeeee\",\n        },\n        divider: \"#000000\",\n        info: {\n            main: \"#3b4cca\",\n            contrastText: \"#eeeeee\",\n        },\n    },\n});\n\ntheme = responsiveFontSizes(theme);\n\nfunction App() {\n    const { auth } = useContext(Context);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline>\n                <Routes>\n                    <Route\n                        path=\"/\"\n                        element={auth ? <Baralhos /> : <SignIn />}\n                    />\n                    <Route\n                        path=\"/profile\"\n                        element={auth ? <Perfil /> : <SignUp />}\n                    />\n                    <Route path=\"/signup\" element={<SignUp />} />\n                    <Route path=\"/signin\" element={<SignIn />} />\n                    <Route path=\"/logout\" element={<LogOut />} />\n                </Routes>\n            </CssBaseline>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { AuthProvider } from './AuthContext'\n\n\nReactDOM.render(\n\t<AuthProvider>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</AuthProvider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}